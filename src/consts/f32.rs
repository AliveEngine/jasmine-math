#![allow(dead_code)]
#![allow(unused_variables)]


use std::{f32};
// #[cfg(target_arch = "x86_64")]
// use std::arch::x86_64::*;
// #[cfg(target_arch = "x86")]
// use std::arch::x86::*;


/// 2(2π)
pub const TWO_TAU: f32 = 12.566370614359172953850573533118_f32;
pub const FRAC_3TAU_4: f32 = 4.7123889803846898576939650749193_f32;
pub const FRAC_3TAU_8: f32 = 2.3561944901923449288469825374596_f32;
pub const FRAC_TAU_2: f32 = 3.1415926535897932384626433832795_f32;
pub const FRAC_TAU_3: f32 = 2.0943951023931954923084289221863_f32;
pub const FRAC_TAU_4: f32 = 1.5707963267948966192313216916398_f32;
pub const FRAC_TAU_6: f32 = 1.0471975511965977461542144610932_f32;
pub const FRAC_TAU_8: f32 = 0.78539816339744830961566084581988_f32;
pub const FRAC_TAU_12: f32 = 0.52359877559829887307710723054658_f32;
pub const FRAC_TAU_16: f32 = 0.39269908169872415480783042290994_f32;
pub const FRAC_TAU_24: f32 = 0.26179938779914943653855361527329_f32;
pub const FRAC_TAU_40: f32 = 0.15707963267948966192313216916398_f32;
pub const FRAC_1_TAU: f32 = 1.0_f32 / std::f32::consts::TAU;
pub const FRAC_2_TAU: f32 = 2.0_f32 / std::f32::consts::TAU;
pub const FRAC_4_TAU: f32 = 4.0_f32 / std::f32::consts::TAU;    
pub const FRAC_1_2TAU: f32 = 0.5_f32 / std::f32::consts::TAU;

// 2π
pub const TWO_PI: f32 = 6.2831853071795864769252867665590_f32;
/// 4π
pub const FOUR_PI: f32 = 12.566370614359172953850573533118_f32;
/// 3π/2
pub const FRAC_3PI_2 : f32 = 4.7123889803846898576939650749193_f32;
/// 3π/4
pub const FRAC_3PI_4: f32 = 2.3561944901923449288469825374596_f32;
/// 2π/3
pub const FRAC_2PI_3 : f32 = 2.0943951023931954923084289221863_f32;

/// 4π/3
pub const FRAC_4PI_3: f32 = 4.1887902047863909846168578443727_f32;
/// π/12
pub const FRAC_PI_12: f32 = 0.26179938779914943653855361527329_f32;
/// π/20
pub const FRAC_PI_20: f32 = 0.15707963267948966192313216916398_f32;
/// 1/(2π)
pub const FRAC_1_2PI: f32 = 1.0_f32 / TWO_PI;
/// 1/(4π)
pub const FRAC_1_4PI: f32 = 1.0_f32 / FOUR_PI;

/// sqrt(2)/2
pub const FRAC_SQRT_2_2: f32 = 0.70710678118654752440084436210485_f32;
/// sqrt(2)/3
pub const FRAC_SQRT_2_3: f32 = 0.47140452079103168293389624140323_f32;
/// sqrt(3)
pub const SQRT_3: f32 = 1.7320508075688772935274463415059_f32;
/// sqrt(3)/2
pub const FRAC_SQRT_3_2: f32 = 0.86602540378443864676372317075294_f32;
/// sqrt(3)/3
pub const FRAC_SQRT_3_3: f32 = 0.57735026918962576450914878050196_f32;

/// 1/ln(2)
pub const FRAC_1_LN_2: f32 = 1.4426950408889634073599246810019_f32;
/// 1/ln(10)
pub const FRAC_1_LN_10: f32 = 0.43429448190325182765112891891661_f32;
/// ln(256)
pub const LN_256: f32 = 5.5451774444795624753378569716654_f32;
